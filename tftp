class FileHandler {
public:
    uint32_t file_length;
    uint16_t protocol_version;
    uint8_t op_acc_stat;
    uint8_t stat_desc_len;
    char stat_desc[256]; // Assuming max length is 256

    bool generateFile(const std::string& path, const std::string& filename) {
        std::ofstream file(path + filename, std::ios::out | std::ios::binary);
        if (!file.is_open()) return false;

        std::cout << path + filename << std::endl;

        file.write(reinterpret_cast<char*>(&file_length), sizeof(file_length));
        std::cout << sizeof(file_length) << " bytes written" << std::endl;

        file.write("A", 1);
        file.write("4", 1);

        file.write(reinterpret_cast<char*>(&protocol_version), sizeof(protocol_version));
        std::cout << sizeof(protocol_version) << " bytes written" << std::endl;

        file.write(reinterpret_cast<char*>(&op_acc_stat), sizeof(op_acc_stat));
        std::cout << sizeof(op_acc_stat) << " bytes written" << std::endl;

        file.write(reinterpret_cast<char*>(&stat_desc_len), sizeof(stat_desc_len));
        std::cout << sizeof(stat_desc_len) << " bytes written" << std::endl;

        if (stat_desc_len > 0 && stat_desc_len <= 256) {
            file.write(stat_desc, stat_desc_len);
            std::cout << static_cast<int>(stat_desc_len) << " bytes written" << std::endl;
        }

        file.close();
        return true;
    }

    bool parseFile(const std::string& path, const std::string& filename) {
        std::ifstream file(path + filename, std::ios::binary);
        if (!file.is_open()) return false;

        file.read(reinterpret_cast<char*>(&file_length), sizeof(file_length));
        char magic1, magic2;
        file.read(&magic1, 1);
        file.read(&magic2, 1);
        file.read(reinterpret_cast<char*>(&protocol_version), sizeof(protocol_version));
        file.read(reinterpret_cast<char*>(&op_acc_stat), sizeof(op_acc_stat));
        file.read(reinterpret_cast<char*>(&stat_desc_len), sizeof(stat_desc_len));

        if (stat_desc_len > 0 && stat_desc_len <= 256) {
            file.read(stat_desc, stat_desc_len);
            stat_desc[stat_desc_len] = '\0'; // Null-terminate if using as C-string
        }

        file.close();
        return true;
    }
};
